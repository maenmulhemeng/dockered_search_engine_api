services:
  db:
    image: postgres:alpine3.19
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_passwd
      POSTGRES_DB: mytest
    secrets:
       - postgres_passwd
    volumes:
      - search_engine_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d mytest'"]
      interval: 1s
      timeout: 5s
      retries: 10
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    ports:
      - 5000:5000  
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: mytest
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test123
      CRAWLER_RUN: yes
      CRAWLER_INTERVAL: 60
    depends_on:
      db:
        condition: service_healthy
  db_initializer:
    build:
      context: .
      dockerfile: Dockerfile
      target: db_initalizer  
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
volumes:
  search_engine_db:
secrets:
  postgres_passwd:
    file: passwd.txt
  
